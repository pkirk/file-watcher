//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FileWatcherUtilities.Presenter.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FileWatcherUtilities.Presenter.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument is null..
        /// </summary>
        internal static string ArgumentNullException {
            get {
                return ResourceManager.GetString("ArgumentNullException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        internal static string LastEventTimeNone {
            get {
                return ResourceManager.GetString("LastEventTimeNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        internal static string LastEventTypeNone {
            get {
                return ResourceManager.GetString("LastEventTypeNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] [{1}] All processes have exited..
        /// </summary>
        internal static string MessageAllHaveProcessExited {
            get {
                return ResourceManager.GetString("MessageAllHaveProcessExited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Watcher Console {0} (C) 2006-2013 J. Hiltunen
        ///
        ///File Watcher Console comes with ABSOLUTELY NO WARRANTY.
        ///This is free software, and you are welcome to redistribute
        ///it under certain conditions. Type &apos;FileWatcherConsole.exe -l&apos; for details. 
        ///
        ///Press [Enter] to exit the application..
        /// </summary>
        internal static string MessageApplicationInfo {
            get {
                return ResourceManager.GetString("MessageApplicationInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] [{1}] Application started..
        /// </summary>
        internal static string MessageApplicationStarted {
            get {
                return ResourceManager.GetString("MessageApplicationStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] [{1}] Application stopped..
        /// </summary>
        internal static string MessageApplicatonStopped {
            get {
                return ResourceManager.GetString("MessageApplicatonStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Buffer error in &apos;{0}&apos; daemon. Reason: {1}.
        /// </summary>
        internal static string MessageBufferError {
            get {
                return ResourceManager.GetString("MessageBufferError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open application log file..
        /// </summary>
        internal static string MessageCannotOpenLogFile {
            get {
                return ResourceManager.GetString("MessageCannotOpenLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML and XML Schema configuration files written..
        /// </summary>
        internal static string MessageConfigurationFilesWritten {
            get {
                return ResourceManager.GetString("MessageConfigurationFilesWritten", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Daemon &apos;{0}&apos; is stopped. Path &apos;{1}&apos; is invalid..
        /// </summary>
        internal static string MessageDaemonPathErrorConsole {
            get {
                return ResourceManager.GetString("MessageDaemonPathErrorConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Daemon &apos;{0}&apos; is stopped.
        ///
        ///Path &apos;{1}&apos; is invalid..
        /// </summary>
        internal static string MessageDaemonPathErrorWinForms {
            get {
                return ResourceManager.GetString("MessageDaemonPathErrorWinForms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Daemon &apos;{0}&apos; is started..
        /// </summary>
        internal static string MessageDaemonStarted {
            get {
                return ResourceManager.GetString("MessageDaemonStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Daemon &apos;{0}&apos; is starting..
        /// </summary>
        internal static string MessageDaemonStarting {
            get {
                return ResourceManager.GetString("MessageDaemonStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Daemon &apos;{0}&apos; is stopped..
        /// </summary>
        internal static string MessageDaemonStopped {
            get {
                return ResourceManager.GetString("MessageDaemonStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: {1}.
        /// </summary>
        internal static string MessageFileChanged {
            get {
                return ResourceManager.GetString("MessageFileChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error in file watcher configuration file: {0}.
        /// </summary>
        internal static string MessageFileWatcherConfigurationError {
            get {
                return ResourceManager.GetString("MessageFileWatcherConfigurationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid service arguments..
        /// </summary>
        internal static string MessageInvalidArguments {
            get {
                return ResourceManager.GetString("MessageInvalidArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No configuration files detected..
        /// </summary>
        internal static string MessageNoConfigurationFilesDetected {
            get {
                return ResourceManager.GetString("MessageNoConfigurationFilesDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No daemons to start..
        /// </summary>
        internal static string MessageNoDaemonsToStart {
            get {
                return ResourceManager.GetString("MessageNoDaemonsToStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press any key to continue....
        /// </summary>
        internal static string MessagePressAnyKeyToContinue {
            get {
                return ResourceManager.GetString("MessagePressAnyKeyToContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press [Enter] to exit....
        /// </summary>
        internal static string MessagePressEnterToExit {
            get {
                return ResourceManager.GetString("MessagePressEnterToExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searh error: {0}.
        /// </summary>
        internal static string MessageSearchError {
            get {
                return ResourceManager.GetString("MessageSearchError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search progress: {0}.
        /// </summary>
        internal static string MessageSearchProgress {
            get {
                return ResourceManager.GetString("MessageSearchProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting daemons....
        /// </summary>
        internal static string MessageStartingDaemons {
            get {
                return ResourceManager.GetString("MessageStartingDaemons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to usage:
        ///FileWatcherConsole.exe [-a] [-r] [-b:x] | [-e | -l | /?]
        ///
        ///  -a		Asynchronous execution of all started processes.
        ///  -r		Runs queued processes when application is stopping.
        ///  -b:x		Total process batch size is x (1-99). &apos;-a&apos; must be specified.
        ///  -e		Write example XML configuration files.
        ///  -l		Displays license.
        ///  /?		Displays usage..
        /// </summary>
        internal static string MessageUsage {
            get {
                return ResourceManager.GetString("MessageUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for queued processes..
        /// </summary>
        internal static string MessageWaitingForQueuedProcesses {
            get {
                return ResourceManager.GetString("MessageWaitingForQueuedProcesses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for running processes to exit..
        /// </summary>
        internal static string MessageWaitingForRunningProcessesToExit {
            get {
                return ResourceManager.GetString("MessageWaitingForRunningProcessesToExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing example daemon XML configuration files..
        /// </summary>
        internal static string MessageWritingExampleDaemonXMLConfigurationFiles {
            get {
                return ResourceManager.GetString("MessageWritingExampleDaemonXMLConfigurationFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PresenterBuilder.
        /// </summary>
        internal static string ObjectNamePresenterBuilder {
            get {
                return ResourceManager.GetString("ObjectNamePresenterBuilder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Started.
        /// </summary>
        internal static string StateStarted {
            get {
                return ResourceManager.GetString("StateStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting.
        /// </summary>
        internal static string StateStarting {
            get {
                return ResourceManager.GetString("StateStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopped.
        /// </summary>
        internal static string StateStopped {
            get {
                return ResourceManager.GetString("StateStopped", resourceCulture);
            }
        }
    }
}
